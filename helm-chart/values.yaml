replicaCount: 2

containerPort: 5000

image:
  repository: devopscode44/interior-web-app
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

service:
  type: NodePort
  port: 80
  targetPort: 5000

ingress:
  enabled: true
  className: alb
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: "flask-alb-group"
  hosts:
    - host: flask-app.k8s-flaskalbgroup-7e4ab08864-1098053488.ap-south-1.elb.amazonaws.com.nip.io
      paths:
        - path: /
          pathType: Prefix

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /
    port: 5000

readinessProbe:
  httpGet:
    path: /
    port: 5000

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 60

volumes: []
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}

configMap:
  name: flask-config
  env:
    FLASK_ENV: production
    LOG_LEVEL: info

app:
  name: flask-app

certManager:
  enabled: false
