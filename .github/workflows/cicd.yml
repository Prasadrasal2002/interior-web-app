name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/docker-setup

jobs:
  build-and-deploy:
    runs-on: [ self-hosted ]  # EC2 self-hosted runner

    steps:
      # 1. Checkout code
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: feature/docker-setup

      # 2. Docker login
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build Docker image
      - name: Build Docker Image
        run: docker build -t devopscode44/interior-web-app:latest .

      # 4. Push Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push devopscode44/interior-web-app:latest

      # 5. Checkout Kubernetes deployment manifests
      - name: Checkout k8s manifests
        uses: actions/checkout@v3
        with:
          ref: feature/k8s-deployment  # or same branch if combined

      # 6. Configure AWS credentials for EKS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 7. Update kubeconfig to connect to EKS cluster
      - name: Setup kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name interior-app-eks --region ap-south-1

      # 8. Apply Kubernetes manifests
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./k8s/

      # 9. (Optional) Set image to latest
      - name: Set latest Docker image to deployment
        run: |
          kubectl set image deployment/interior-web-app interior-web-app=devopscode44/interior-web-app:latest
